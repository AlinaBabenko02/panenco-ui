.s1b7adyl{width:var(--s1b7adyl-0);}.s1b7adyl .isMultiActiveChips{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;width:100%;}.s1b7adyl .multiSelectChip{margin:10px 4px 0 0;}.s1b7adyl .title{color:var(--s1b7adyl-1);display:block;margin-bottom:5px;margin-right:24px;}.s1b7adyl .subTitle{display:block;margin-bottom:5px;margin-right:24px;}.s1b7adyl .wrapperSelect{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}.s1b7adyl .errorIconWrapper{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;min-width:24px;padding-left:8px;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;}.s1b7adyl .errorIcon{color:var(--s1b7adyl-2);height:16px;width:16px;}.s1b7adyl .errorTitle{color:var(--s1b7adyl-3);display:block;margin-top:5px;}@media (max-width:840px){.s1b7adyl{width:100%;}.s1b7adyl .errorIconWrapper{display:none;}.s1b7adyl .title,.s1b7adyl .subTitle{margin-right:0;}}
/*# sourceMappingURL=data:application/json;base64,*/